#!/bin/sh
# EliteArch
# (1/3)
printf '\033c'
echo "Welcome to Elite ArchLinux installer"
timedatectl set-timezone Asia/Kolkata
timedatectl status
loadkeys us
timedatectl set-ntp true
lsblk
fdisk -l 
echo "CREATE PARTITIONS ...."
echo -ne "\nEnter your Drive : "
read -e drive 
cfdisk $drive
clear && lsblk
echo -ne "\nEnter the linux partition: "
read -e partition
mkfs.ext4 $partition
echo -ne "\nEnter the Swap partition: "
read -e spartition
mkswap $spartition
swapon $spartition
lsblk 
mount $partition /mnt
lsblk 
cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
ls /etc/pacman.d/
pacman -Sy
pacman -S archlinux-keyring pacman-contrib
rankmirrors -n 10 /etc/pacman.d/mirrorlist.bak > /etc/pacman.d/mirrorlist
pacstrap -i /mnt archlinux-keyring base base-devel linux linux-headers linux-firmware intel-ucode sudo neovim git neofetch networkmanager dhcpcd pulseaudio dash 
genfstab -U /mnt > /mnt/etc/fstab
sed '1,/^# (2\/3)$/d' `basename $0` > /mnt/install.sh
chmod +x /mnt/install.sh
arch-chroot /mnt ./install.sh
arch-chroot /mnt

# (2/3)
#!/bin/sh
printf '\033c'
ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen 
echo "LANG=en_US.UTF-8" > /etc/locale.conf
echo "KEYMAP=us" > /etc/vconsole.conf
echo -ne "Hostname: "
read hostname
echo $hostname > /etc/hostname
echo "127.0.0.1       localhost" >> /etc/hosts
echo "::1             localhost" >> /etc/hosts
echo "127.0.1.1       $hostname.localdomain $hostname" >> /etc/hosts
mkinitcpio -P
passwd
pacman --noconfirm -S grub efibootmgr os-prober dosfstools mtools
fdisk -l
echo -ne "Enter EFI partition: " 
read -e efipartition
mkdir /boot/efi
mount $efipartition /boot/efi
lsblk
grub-install --target=x86_64-efi --bootloader-id=GRUB --recheck 
grub-mkconfig -o /boot/grub/grub.cfg
systemctl enable connman.service
systemctl enable NetworkManager.service
systemctl enable dhcpcd.service
rm /bin/sh
ln -s dash /bin/sh
echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
echo -ne "Enter Username: "
read username
useradd -m $username
usermod -aG wheel,storage,power $username
passwd $username
hypr_el=/home/$username/hypr_install.sh
sed '1,/^# (3\/3)$/d' install.sh > $hypr_el
chown $username:$username $hypr_el
chmod +x $hypr_el
su -c $hypr_el -s /bin/sh $username
echo "Finish Reboot now"
exit

# (3/3)
#!/bin/bash
printf '\033c'
cd $HOME
git_cfg() {

	echo -e "\n[!] Setting Up Git config " 
	git config --global user.email "alansedp@gmail.com"
	git config --global user.name "shadowelite"
	git config --global credential.helper store
	git config --global core.editor nvim
}

yay_install() {

	clear
	echo -e "[*] Installing AUR helper "
	sudo pacman -S --needed git base-devel 
	git clone https://aur.archlinux.org/yay.git
	cd yay
	makepkg -sifr

}

hyprland_setup() {
	
	echo -e "\n[*] Installing Hyprland Essenstial pkgs "
	yay -S --noconfirm hyprland-git waybar-hyprland-git hyprpicker-git foot-git swww-git qt5-wayland qt6-wayland polkit-kde-agent xdg-desktop-portal-hyprland-git grim slurp swappy-git dunst nwg-look-bin nwg-panel nwg-dock-hyprland-bin nwg-drawer-bin rofi-lbonn-wayland-git ttf-jetbrains-mono-nerd brightnessctl libpulse python-pywal jq zsh nodejs npm

}

user_apps() {

	echo -e "\n[*] Installing User Applications and Utils "
	yay -S --noconfirm stow neovim man bat xdg-user-dirs firefox discord telegram-desktop thunar gvfs gvfs-mtp colloid-gtk-theme-git colloid-icon-theme-git mpv sxiv tauon-music-box bluez-tools bluez-utils obs-studio wlrobs-hg bluetoothctl 
	
}

sec_app() {

	echo -e "\n[*] Installing Security Testing Applications "
	yay -S --noconfirm python python3 python-pip gdb radare2 ida-free burpsuite ghidra ghex nmap metasploit
	pip3 install pwntools
}

install_dots() {

	echo -e "\n[*] Installing Dotfiles "
	rm -rf ~/.config && rm -r ~/.zshrc ~/.bashrc 
	mkdir ~/.config
	git clone --depth=1 https://github.com/shadowelite-sec/hypr ~/.dot
	cd ~/.dot
	stow */
	cd
}

yay_install 
git_cfg 
hyprland_setup 
user_apps 
sec_app 

zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1

chsh
install_dots

mkdir ~/code ~/ctf ~/imp 
echo "Everything is Done , Now Reboot"
exit
